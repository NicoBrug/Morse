/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: C:\Dev\DataTypes\COMPILED/msg/DynamicArrayPrimitives.h
  Source: C:\Dev\DataTypes\ROS\test_msgs\msg\DynamicArrayPrimitives.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC_C__DEV_DATATYPES_COMPILED_MSG_DYNAMICARRAYPRIMITIVES_H_C583983C4A88996F9D53522E7B2D46A9
#define DDSC_C__DEV_DATATYPES_COMPILED_MSG_DYNAMICARRAYPRIMITIVES_H_C583983C4A88996F9D53522E7B2D46A9

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef DDS_SEQUENCE_BOOL_DEFINED
#define DDS_SEQUENCE_BOOL_DEFINED
typedef struct dds_sequence_bool
{
  uint32_t _maximum;
  uint32_t _length;
  bool *_buffer;
  bool _release;
} dds_sequence_bool;

#define dds_sequence_bool__alloc() \
((dds_sequence_bool*) dds_alloc (sizeof (dds_sequence_bool)));

#define dds_sequence_bool_allocbuf(l) \
((bool *) dds_alloc ((l) * sizeof (bool)))
#endif /* DDS_SEQUENCE_BOOL_DEFINED */

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

#ifndef DDS_SEQUENCE_CHAR_DEFINED
#define DDS_SEQUENCE_CHAR_DEFINED
typedef struct dds_sequence_char
{
  uint32_t _maximum;
  uint32_t _length;
  char *_buffer;
  bool _release;
} dds_sequence_char;

#define dds_sequence_char__alloc() \
((dds_sequence_char*) dds_alloc (sizeof (dds_sequence_char)));

#define dds_sequence_char_allocbuf(l) \
((char *) dds_alloc ((l) * sizeof (char)))
#endif /* DDS_SEQUENCE_CHAR_DEFINED */

#ifndef DDS_SEQUENCE_FLOAT_DEFINED
#define DDS_SEQUENCE_FLOAT_DEFINED
typedef struct dds_sequence_float
{
  uint32_t _maximum;
  uint32_t _length;
  float *_buffer;
  bool _release;
} dds_sequence_float;

#define dds_sequence_float__alloc() \
((dds_sequence_float*) dds_alloc (sizeof (dds_sequence_float)));

#define dds_sequence_float_allocbuf(l) \
((float *) dds_alloc ((l) * sizeof (float)))
#endif /* DDS_SEQUENCE_FLOAT_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

#ifndef DDS_SEQUENCE_SHORT_DEFINED
#define DDS_SEQUENCE_SHORT_DEFINED
typedef struct dds_sequence_short
{
  uint32_t _maximum;
  uint32_t _length;
  int16_t *_buffer;
  bool _release;
} dds_sequence_short;

#define dds_sequence_short__alloc() \
((dds_sequence_short*) dds_alloc (sizeof (dds_sequence_short)));

#define dds_sequence_short_allocbuf(l) \
((int16_t *) dds_alloc ((l) * sizeof (int16_t)))
#endif /* DDS_SEQUENCE_SHORT_DEFINED */

#ifndef DDS_SEQUENCE_UNSIGNED_SHORT_DEFINED
#define DDS_SEQUENCE_UNSIGNED_SHORT_DEFINED
typedef struct dds_sequence_unsigned_short
{
  uint32_t _maximum;
  uint32_t _length;
  uint16_t *_buffer;
  bool _release;
} dds_sequence_unsigned_short;

#define dds_sequence_unsigned_short__alloc() \
((dds_sequence_unsigned_short*) dds_alloc (sizeof (dds_sequence_unsigned_short)));

#define dds_sequence_unsigned_short_allocbuf(l) \
((uint16_t *) dds_alloc ((l) * sizeof (uint16_t)))
#endif /* DDS_SEQUENCE_UNSIGNED_SHORT_DEFINED */

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

#ifndef DDS_SEQUENCE_UNSIGNED_LONG_DEFINED
#define DDS_SEQUENCE_UNSIGNED_LONG_DEFINED
typedef struct dds_sequence_unsigned_long
{
  uint32_t _maximum;
  uint32_t _length;
  uint32_t *_buffer;
  bool _release;
} dds_sequence_unsigned_long;

#define dds_sequence_unsigned_long__alloc() \
((dds_sequence_unsigned_long*) dds_alloc (sizeof (dds_sequence_unsigned_long)));

#define dds_sequence_unsigned_long_allocbuf(l) \
((uint32_t *) dds_alloc ((l) * sizeof (uint32_t)))
#endif /* DDS_SEQUENCE_UNSIGNED_LONG_DEFINED */

#ifndef DDS_SEQUENCE_LONG_LONG_DEFINED
#define DDS_SEQUENCE_LONG_LONG_DEFINED
typedef struct dds_sequence_long_long
{
  uint32_t _maximum;
  uint32_t _length;
  int64_t *_buffer;
  bool _release;
} dds_sequence_long_long;

#define dds_sequence_long_long__alloc() \
((dds_sequence_long_long*) dds_alloc (sizeof (dds_sequence_long_long)));

#define dds_sequence_long_long_allocbuf(l) \
((int64_t *) dds_alloc ((l) * sizeof (int64_t)))
#endif /* DDS_SEQUENCE_LONG_LONG_DEFINED */

#ifndef DDS_SEQUENCE_UNSIGNED_LONG_LONG_DEFINED
#define DDS_SEQUENCE_UNSIGNED_LONG_LONG_DEFINED
typedef struct dds_sequence_unsigned_long_long
{
  uint32_t _maximum;
  uint32_t _length;
  uint64_t *_buffer;
  bool _release;
} dds_sequence_unsigned_long_long;

#define dds_sequence_unsigned_long_long__alloc() \
((dds_sequence_unsigned_long_long*) dds_alloc (sizeof (dds_sequence_unsigned_long_long)));

#define dds_sequence_unsigned_long_long_allocbuf(l) \
((uint64_t *) dds_alloc ((l) * sizeof (uint64_t)))
#endif /* DDS_SEQUENCE_UNSIGNED_LONG_LONG_DEFINED */

#ifndef DDS_SEQUENCE_STRING_DEFINED
#define DDS_SEQUENCE_STRING_DEFINED
typedef struct dds_sequence_string
{
  uint32_t _maximum;
  uint32_t _length;
  char **_buffer;
  bool _release;
} dds_sequence_string;

#define dds_sequence_string__alloc() \
((dds_sequence_string*) dds_alloc (sizeof (dds_sequence_string)));

#define dds_sequence_string_allocbuf(l) \
((char **) dds_alloc ((l) * sizeof (char*)))
#endif /* DDS_SEQUENCE_STRING_DEFINED */

typedef struct test_msgs_msg_DynamicArrayPrimitives
{
  dds_sequence_bool bool_values;
  dds_sequence_octet byte_values;
  dds_sequence_char char_values;
  dds_sequence_float float32_values;
  dds_sequence_double float64_values;
  dds_sequence_octet int8_values;
  dds_sequence_octet uint8_values;
  dds_sequence_short int16_values;
  dds_sequence_unsigned_short uint16_values;
  dds_sequence_long int32_values;
  dds_sequence_unsigned_long uint32_values;
  dds_sequence_long_long int64_values;
  dds_sequence_unsigned_long_long uint64_values;
  dds_sequence_string string_values;
  int32_t check;
} test_msgs_msg_DynamicArrayPrimitives;

extern const dds_topic_descriptor_t test_msgs_msg_DynamicArrayPrimitives_desc;

#define test_msgs_msg_DynamicArrayPrimitives__alloc() \
((test_msgs_msg_DynamicArrayPrimitives*) dds_alloc (sizeof (test_msgs_msg_DynamicArrayPrimitives)));

#define test_msgs_msg_DynamicArrayPrimitives_free(d,o) \
dds_sample_free ((d), &test_msgs_msg_DynamicArrayPrimitives_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_C__DEV_DATATYPES_COMPILED_MSG_DYNAMICARRAYPRIMITIVES_H_C583983C4A88996F9D53522E7B2D46A9 */
